// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}





model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String   @unique
  hash      String
  createdAt DateTime @default(now())
}



model Asset {
  id                        Int      @id @default(autoincrement())
  name                      String   @unique
  group                     String
  price                     Float
  purchaseDate              DateTime
  status                    String

  maintenanceSchedules      MaintenanceSchedule[]               // Trường đối xứng luôn luôn có

  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  engine                    Engine?                              // Trường đối xứng, có thể có hoặc ko
}



model MaintenanceSchedule {
  id                        Int      @id @default(autoincrement())
  assetId                   Int
  asset                     Asset    @relation(fields: [assetId], references: [id])
  cost                      Float?


  maintenanceType           String   // "auto" / "manual"
  maintenanceIntervalMonths Int?     // Chỉ khi auto
  maintenanceDate           DateTime // Ngày bảo trì (manual hoặc auto đều có)
  status String @default("pending") // mặc định là chưa bảo trì
  note                      String?  // Ghi chú

  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
}



model Engine {
  id        Int     @id  @default(autoincrement())
  model     String?                // Đoạn này có thể thêm vào sau
  assetId   Int     @unique       // Khóa ngoại
  asset     Asset   @relation(fields: [assetId], references:[id])   // @relation giúp khai báo 1 mối quan hệ giữa 2 bảng (assetId tham chiếu đến id của bảng Asset)   
  engineActivityLog       EngineActivityLog[]      
} 




model EngineActivityLog{
  id            Int          @id @default(autoincrement())
  engine        Engine       @relation(fields:[engineId], references:[id])  
  engineId      Int
  HoursUsed     Float
  note          String?
}